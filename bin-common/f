#!/usr/bin/env bash
# a wrapper around find which make the common case easy: search a given folder
# (the current folder by default) for files (not folders) containing a given
# substring.
declare -a DIR
declare -a FIND_OPTIONS
while [ -d "$1" ]; do
  DIR[${#DIR[@]}]="$1"; shift
done

if [ "${#DIR[@]}" -eq 0 ]; then
  DIR="."
fi

if [ "$(basename "$0")" = "grepp" ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="-name"
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="*.cpp"
fi

if [ "$(echo "$1" | cut -c1)" = "." ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="-name"
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="*$1"; shift
fi

if [ "$1" = "-name" ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
fi

if [ "$1" = "-iname" ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
fi

if [ "$1" = "-newer" ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="$1"; shift
fi

if [ "$1" ]; then
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="-name";
  FIND_OPTIONS[${#FIND_OPTIONS[@]}]="*$1*"; shift
fi

find "${DIR[@]}" -type f "${FIND_OPTIONS[@]}" | grep -v '\.svn' | grep -v '\.git'
